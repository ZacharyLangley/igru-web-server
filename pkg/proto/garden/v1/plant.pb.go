// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: garden/v1/plant.proto

package gardenv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreatePlantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	GroupId         string                 `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Comment         string                 `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
	Notes           string                 `protobuf:"bytes,4,opt,name=notes,proto3" json:"notes,omitempty"`
	GrowCycleLength string                 `protobuf:"bytes,5,opt,name=grow_cycle_length,json=growCycleLength,proto3" json:"grow_cycle_length,omitempty"`
	Parentage       string                 `protobuf:"bytes,6,opt,name=parentage,proto3" json:"parentage,omitempty"`
	Origin          string                 `protobuf:"bytes,7,opt,name=origin,proto3" json:"origin,omitempty"`
	Gender          string                 `protobuf:"bytes,8,opt,name=gender,proto3" json:"gender,omitempty"`
	DaysFlowering   float64                `protobuf:"fixed64,9,opt,name=days_flowering,json=daysFlowering,proto3" json:"days_flowering,omitempty"`
	DaysCured       float64                `protobuf:"fixed64,10,opt,name=days_cured,json=daysCured,proto3" json:"days_cured,omitempty"`
	HarvestedWeight string                 `protobuf:"bytes,11,opt,name=harvested_weight,json=harvestedWeight,proto3" json:"harvested_weight,omitempty"`
	BudDensity      float64                `protobuf:"fixed64,12,opt,name=bud_density,json=budDensity,proto3" json:"bud_density,omitempty"`
	BudPistils      bool                   `protobuf:"varint,13,opt,name=bud_pistils,json=budPistils,proto3" json:"bud_pistils,omitempty"`
	Tags            string                 `protobuf:"bytes,14,opt,name=tags,proto3" json:"tags,omitempty"`
	AcquiredAt      *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=acquired_at,json=acquiredAt,proto3" json:"acquired_at,omitempty"`
}

func (x *CreatePlantRequest) Reset() {
	*x = CreatePlantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_garden_v1_plant_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePlantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlantRequest) ProtoMessage() {}

func (x *CreatePlantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_garden_v1_plant_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlantRequest.ProtoReflect.Descriptor instead.
func (*CreatePlantRequest) Descriptor() ([]byte, []int) {
	return file_garden_v1_plant_proto_rawDescGZIP(), []int{0}
}

func (x *CreatePlantRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreatePlantRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *CreatePlantRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *CreatePlantRequest) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *CreatePlantRequest) GetGrowCycleLength() string {
	if x != nil {
		return x.GrowCycleLength
	}
	return ""
}

func (x *CreatePlantRequest) GetParentage() string {
	if x != nil {
		return x.Parentage
	}
	return ""
}

func (x *CreatePlantRequest) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *CreatePlantRequest) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *CreatePlantRequest) GetDaysFlowering() float64 {
	if x != nil {
		return x.DaysFlowering
	}
	return 0
}

func (x *CreatePlantRequest) GetDaysCured() float64 {
	if x != nil {
		return x.DaysCured
	}
	return 0
}

func (x *CreatePlantRequest) GetHarvestedWeight() string {
	if x != nil {
		return x.HarvestedWeight
	}
	return ""
}

func (x *CreatePlantRequest) GetBudDensity() float64 {
	if x != nil {
		return x.BudDensity
	}
	return 0
}

func (x *CreatePlantRequest) GetBudPistils() bool {
	if x != nil {
		return x.BudPistils
	}
	return false
}

func (x *CreatePlantRequest) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *CreatePlantRequest) GetAcquiredAt() *timestamppb.Timestamp {
	if x != nil {
		return x.AcquiredAt
	}
	return nil
}

type CreatePlantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plant *Plant `protobuf:"bytes,1,opt,name=plant,proto3" json:"plant,omitempty"`
}

func (x *CreatePlantResponse) Reset() {
	*x = CreatePlantResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_garden_v1_plant_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePlantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlantResponse) ProtoMessage() {}

func (x *CreatePlantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_garden_v1_plant_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlantResponse.ProtoReflect.Descriptor instead.
func (*CreatePlantResponse) Descriptor() ([]byte, []int) {
	return file_garden_v1_plant_proto_rawDescGZIP(), []int{1}
}

func (x *CreatePlantResponse) GetPlant() *Plant {
	if x != nil {
		return x.Plant
	}
	return nil
}

type DeletePlantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	GroupId string `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *DeletePlantRequest) Reset() {
	*x = DeletePlantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_garden_v1_plant_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePlantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePlantRequest) ProtoMessage() {}

func (x *DeletePlantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_garden_v1_plant_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePlantRequest.ProtoReflect.Descriptor instead.
func (*DeletePlantRequest) Descriptor() ([]byte, []int) {
	return file_garden_v1_plant_proto_rawDescGZIP(), []int{2}
}

func (x *DeletePlantRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeletePlantRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type DeletePlantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plant *Plant `protobuf:"bytes,1,opt,name=plant,proto3" json:"plant,omitempty"`
}

func (x *DeletePlantResponse) Reset() {
	*x = DeletePlantResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_garden_v1_plant_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePlantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePlantResponse) ProtoMessage() {}

func (x *DeletePlantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_garden_v1_plant_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePlantResponse.ProtoReflect.Descriptor instead.
func (*DeletePlantResponse) Descriptor() ([]byte, []int) {
	return file_garden_v1_plant_proto_rawDescGZIP(), []int{3}
}

func (x *DeletePlantResponse) GetPlant() *Plant {
	if x != nil {
		return x.Plant
	}
	return nil
}

type UpdatePlantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	GroupId         string                 `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Name            string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Comment         string                 `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
	Notes           string                 `protobuf:"bytes,5,opt,name=notes,proto3" json:"notes,omitempty"`
	GrowCycleLength string                 `protobuf:"bytes,6,opt,name=grow_cycle_length,json=growCycleLength,proto3" json:"grow_cycle_length,omitempty"`
	Parentage       string                 `protobuf:"bytes,7,opt,name=parentage,proto3" json:"parentage,omitempty"`
	Origin          string                 `protobuf:"bytes,8,opt,name=origin,proto3" json:"origin,omitempty"`
	Gender          string                 `protobuf:"bytes,9,opt,name=gender,proto3" json:"gender,omitempty"`
	DaysFlowering   float64                `protobuf:"fixed64,10,opt,name=days_flowering,json=daysFlowering,proto3" json:"days_flowering,omitempty"`
	DaysCured       float64                `protobuf:"fixed64,11,opt,name=days_cured,json=daysCured,proto3" json:"days_cured,omitempty"`
	HarvestedWeight string                 `protobuf:"bytes,12,opt,name=harvested_weight,json=harvestedWeight,proto3" json:"harvested_weight,omitempty"`
	BudDensity      float64                `protobuf:"fixed64,13,opt,name=bud_density,json=budDensity,proto3" json:"bud_density,omitempty"`
	BudPistils      bool                   `protobuf:"varint,14,opt,name=bud_pistils,json=budPistils,proto3" json:"bud_pistils,omitempty"`
	Tags            string                 `protobuf:"bytes,15,opt,name=tags,proto3" json:"tags,omitempty"`
	AcquiredAt      *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=acquired_at,json=acquiredAt,proto3" json:"acquired_at,omitempty"`
}

func (x *UpdatePlantRequest) Reset() {
	*x = UpdatePlantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_garden_v1_plant_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePlantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePlantRequest) ProtoMessage() {}

func (x *UpdatePlantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_garden_v1_plant_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePlantRequest.ProtoReflect.Descriptor instead.
func (*UpdatePlantRequest) Descriptor() ([]byte, []int) {
	return file_garden_v1_plant_proto_rawDescGZIP(), []int{4}
}

func (x *UpdatePlantRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdatePlantRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *UpdatePlantRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdatePlantRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *UpdatePlantRequest) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *UpdatePlantRequest) GetGrowCycleLength() string {
	if x != nil {
		return x.GrowCycleLength
	}
	return ""
}

func (x *UpdatePlantRequest) GetParentage() string {
	if x != nil {
		return x.Parentage
	}
	return ""
}

func (x *UpdatePlantRequest) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *UpdatePlantRequest) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *UpdatePlantRequest) GetDaysFlowering() float64 {
	if x != nil {
		return x.DaysFlowering
	}
	return 0
}

func (x *UpdatePlantRequest) GetDaysCured() float64 {
	if x != nil {
		return x.DaysCured
	}
	return 0
}

func (x *UpdatePlantRequest) GetHarvestedWeight() string {
	if x != nil {
		return x.HarvestedWeight
	}
	return ""
}

func (x *UpdatePlantRequest) GetBudDensity() float64 {
	if x != nil {
		return x.BudDensity
	}
	return 0
}

func (x *UpdatePlantRequest) GetBudPistils() bool {
	if x != nil {
		return x.BudPistils
	}
	return false
}

func (x *UpdatePlantRequest) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *UpdatePlantRequest) GetAcquiredAt() *timestamppb.Timestamp {
	if x != nil {
		return x.AcquiredAt
	}
	return nil
}

type UpdatePlantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plant *Plant `protobuf:"bytes,1,opt,name=plant,proto3" json:"plant,omitempty"`
}

func (x *UpdatePlantResponse) Reset() {
	*x = UpdatePlantResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_garden_v1_plant_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePlantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePlantResponse) ProtoMessage() {}

func (x *UpdatePlantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_garden_v1_plant_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePlantResponse.ProtoReflect.Descriptor instead.
func (*UpdatePlantResponse) Descriptor() ([]byte, []int) {
	return file_garden_v1_plant_proto_rawDescGZIP(), []int{5}
}

func (x *UpdatePlantResponse) GetPlant() *Plant {
	if x != nil {
		return x.Plant
	}
	return nil
}

type GetPlantsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *GetPlantsRequest) Reset() {
	*x = GetPlantsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_garden_v1_plant_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlantsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlantsRequest) ProtoMessage() {}

func (x *GetPlantsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_garden_v1_plant_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlantsRequest.ProtoReflect.Descriptor instead.
func (*GetPlantsRequest) Descriptor() ([]byte, []int) {
	return file_garden_v1_plant_proto_rawDescGZIP(), []int{6}
}

func (x *GetPlantsRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type GetPlantsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plants []*Plant `protobuf:"bytes,1,rep,name=plants,proto3" json:"plants,omitempty"`
}

func (x *GetPlantsResponse) Reset() {
	*x = GetPlantsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_garden_v1_plant_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlantsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlantsResponse) ProtoMessage() {}

func (x *GetPlantsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_garden_v1_plant_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlantsResponse.ProtoReflect.Descriptor instead.
func (*GetPlantsResponse) Descriptor() ([]byte, []int) {
	return file_garden_v1_plant_proto_rawDescGZIP(), []int{7}
}

func (x *GetPlantsResponse) GetPlants() []*Plant {
	if x != nil {
		return x.Plants
	}
	return nil
}

type GetPlantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	GroupId string `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *GetPlantRequest) Reset() {
	*x = GetPlantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_garden_v1_plant_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlantRequest) ProtoMessage() {}

func (x *GetPlantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_garden_v1_plant_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlantRequest.ProtoReflect.Descriptor instead.
func (*GetPlantRequest) Descriptor() ([]byte, []int) {
	return file_garden_v1_plant_proto_rawDescGZIP(), []int{8}
}

func (x *GetPlantRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetPlantRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type GetPlantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plant *Plant `protobuf:"bytes,1,opt,name=plant,proto3" json:"plant,omitempty"`
}

func (x *GetPlantResponse) Reset() {
	*x = GetPlantResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_garden_v1_plant_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlantResponse) ProtoMessage() {}

func (x *GetPlantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_garden_v1_plant_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlantResponse.ProtoReflect.Descriptor instead.
func (*GetPlantResponse) Descriptor() ([]byte, []int) {
	return file_garden_v1_plant_proto_rawDescGZIP(), []int{9}
}

func (x *GetPlantResponse) GetPlant() *Plant {
	if x != nil {
		return x.Plant
	}
	return nil
}

var File_garden_v1_plant_proto protoreflect.FileDescriptor

var file_garden_v1_plant_proto_rawDesc = []byte{
	0x0a, 0x15, 0x67, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6c, 0x61, 0x6e,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x67, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x2e,
	0x76, 0x31, 0x1a, 0x16, 0x67, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf1, 0x03, 0x0a, 0x12,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6e,
	0x6f, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65,
	0x73, 0x12, 0x2a, 0x0a, 0x11, 0x67, 0x72, 0x6f, 0x77, 0x5f, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x5f,
	0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x67, 0x72,
	0x6f, 0x77, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x64,
	0x61, 0x79, 0x73, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0d, 0x64, 0x61, 0x79, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x69,
	0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x79, 0x73, 0x5f, 0x63, 0x75, 0x72, 0x65, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x64, 0x61, 0x79, 0x73, 0x43, 0x75, 0x72, 0x65,
	0x64, 0x12, 0x29, 0x0a, 0x10, 0x68, 0x61, 0x72, 0x76, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x77,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x68, 0x61, 0x72,
	0x76, 0x65, 0x73, 0x74, 0x65, 0x64, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x62, 0x75, 0x64, 0x5f, 0x64, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0a, 0x62, 0x75, 0x64, 0x44, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a,
	0x0b, 0x62, 0x75, 0x64, 0x5f, 0x70, 0x69, 0x73, 0x74, 0x69, 0x6c, 0x73, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x62, 0x75, 0x64, 0x50, 0x69, 0x73, 0x74, 0x69, 0x6c, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x12, 0x3b, 0x0a, 0x0b, 0x61, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0a, 0x61, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x41, 0x74, 0x22,
	0x3d, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x52, 0x05, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x22, 0x3f,
	0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22,
	0x3d, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x52, 0x05, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x22, 0x81,
	0x04, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e,
	0x6f, 0x74, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x67, 0x72, 0x6f, 0x77, 0x5f, 0x63, 0x79, 0x63,
	0x6c, 0x65, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x67, 0x72, 0x6f, 0x77, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x25,
	0x0a, 0x0e, 0x64, 0x61, 0x79, 0x73, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x69, 0x6e, 0x67,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x64, 0x61, 0x79, 0x73, 0x46, 0x6c, 0x6f, 0x77,
	0x65, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x79, 0x73, 0x5f, 0x63, 0x75,
	0x72, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x64, 0x61, 0x79, 0x73, 0x43,
	0x75, 0x72, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x68, 0x61, 0x72, 0x76, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x68, 0x61, 0x72, 0x76, 0x65, 0x73, 0x74, 0x65, 0x64, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x64, 0x5f, 0x64, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x62, 0x75, 0x64, 0x44, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79,
	0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x64, 0x5f, 0x70, 0x69, 0x73, 0x74, 0x69, 0x6c, 0x73, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x62, 0x75, 0x64, 0x50, 0x69, 0x73, 0x74, 0x69, 0x6c,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x3b, 0x0a, 0x0b, 0x61, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x61, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x41, 0x74, 0x22, 0x3d, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x70, 0x6c, 0x61,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x61, 0x72, 0x64, 0x65,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x52, 0x05, 0x70, 0x6c, 0x61, 0x6e,
	0x74, 0x22, 0x2d, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x22, 0x3d, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x73, 0x22,
	0x3c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x3a, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x26, 0x0a, 0x05, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x67, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61,
	0x6e, 0x74, 0x52, 0x05, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x32, 0x8f, 0x03, 0x0a, 0x0c, 0x50, 0x6c,
	0x61, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4e, 0x0a, 0x0b, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x12, 0x1d, 0x2e, 0x67, 0x61, 0x72, 0x64,
	0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x67, 0x61, 0x72, 0x64, 0x65,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0b, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x12, 0x1d, 0x2e, 0x67, 0x61, 0x72, 0x64,
	0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x67, 0x61, 0x72, 0x64, 0x65,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0b, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x12, 0x1d, 0x2e, 0x67, 0x61, 0x72, 0x64,
	0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x67, 0x61, 0x72, 0x64, 0x65,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x09, 0x47, 0x65,
	0x74, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x1b, 0x2e, 0x67, 0x61, 0x72, 0x64, 0x65, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x67, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x74,
	0x12, 0x1a, 0x2e, 0x67, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x6c, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x67,
	0x61, 0x72, 0x64, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0xa8, 0x01, 0x0a, 0x0d,
	0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x42, 0x0a, 0x50,
	0x6c, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x46, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x5a, 0x61, 0x63, 0x68, 0x61, 0x72, 0x79, 0x4c,
	0x61, 0x6e, 0x67, 0x6c, 0x65, 0x79, 0x2f, 0x69, 0x67, 0x72, 0x75, 0x2d, 0x77, 0x65, 0x62, 0x2d,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x67, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x2f, 0x76, 0x31, 0x3b, 0x67, 0x61, 0x72, 0x64, 0x65,
	0x6e, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x47, 0x58, 0x58, 0xaa, 0x02, 0x09, 0x47, 0x61, 0x72, 0x64,
	0x65, 0x6e, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x09, 0x47, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x5c, 0x56,
	0x31, 0xe2, 0x02, 0x15, 0x47, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0a, 0x47, 0x61, 0x72, 0x64,
	0x65, 0x6e, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_garden_v1_plant_proto_rawDescOnce sync.Once
	file_garden_v1_plant_proto_rawDescData = file_garden_v1_plant_proto_rawDesc
)

func file_garden_v1_plant_proto_rawDescGZIP() []byte {
	file_garden_v1_plant_proto_rawDescOnce.Do(func() {
		file_garden_v1_plant_proto_rawDescData = protoimpl.X.CompressGZIP(file_garden_v1_plant_proto_rawDescData)
	})
	return file_garden_v1_plant_proto_rawDescData
}

var file_garden_v1_plant_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_garden_v1_plant_proto_goTypes = []interface{}{
	(*CreatePlantRequest)(nil),    // 0: garden.v1.CreatePlantRequest
	(*CreatePlantResponse)(nil),   // 1: garden.v1.CreatePlantResponse
	(*DeletePlantRequest)(nil),    // 2: garden.v1.DeletePlantRequest
	(*DeletePlantResponse)(nil),   // 3: garden.v1.DeletePlantResponse
	(*UpdatePlantRequest)(nil),    // 4: garden.v1.UpdatePlantRequest
	(*UpdatePlantResponse)(nil),   // 5: garden.v1.UpdatePlantResponse
	(*GetPlantsRequest)(nil),      // 6: garden.v1.GetPlantsRequest
	(*GetPlantsResponse)(nil),     // 7: garden.v1.GetPlantsResponse
	(*GetPlantRequest)(nil),       // 8: garden.v1.GetPlantRequest
	(*GetPlantResponse)(nil),      // 9: garden.v1.GetPlantResponse
	(*timestamppb.Timestamp)(nil), // 10: google.protobuf.Timestamp
	(*Plant)(nil),                 // 11: garden.v1.Plant
}
var file_garden_v1_plant_proto_depIdxs = []int32{
	10, // 0: garden.v1.CreatePlantRequest.acquired_at:type_name -> google.protobuf.Timestamp
	11, // 1: garden.v1.CreatePlantResponse.plant:type_name -> garden.v1.Plant
	11, // 2: garden.v1.DeletePlantResponse.plant:type_name -> garden.v1.Plant
	10, // 3: garden.v1.UpdatePlantRequest.acquired_at:type_name -> google.protobuf.Timestamp
	11, // 4: garden.v1.UpdatePlantResponse.plant:type_name -> garden.v1.Plant
	11, // 5: garden.v1.GetPlantsResponse.plants:type_name -> garden.v1.Plant
	11, // 6: garden.v1.GetPlantResponse.plant:type_name -> garden.v1.Plant
	0,  // 7: garden.v1.PlantService.CreatePlant:input_type -> garden.v1.CreatePlantRequest
	2,  // 8: garden.v1.PlantService.DeletePlant:input_type -> garden.v1.DeletePlantRequest
	4,  // 9: garden.v1.PlantService.UpdatePlant:input_type -> garden.v1.UpdatePlantRequest
	6,  // 10: garden.v1.PlantService.GetPlants:input_type -> garden.v1.GetPlantsRequest
	8,  // 11: garden.v1.PlantService.GetPlant:input_type -> garden.v1.GetPlantRequest
	1,  // 12: garden.v1.PlantService.CreatePlant:output_type -> garden.v1.CreatePlantResponse
	3,  // 13: garden.v1.PlantService.DeletePlant:output_type -> garden.v1.DeletePlantResponse
	5,  // 14: garden.v1.PlantService.UpdatePlant:output_type -> garden.v1.UpdatePlantResponse
	7,  // 15: garden.v1.PlantService.GetPlants:output_type -> garden.v1.GetPlantsResponse
	9,  // 16: garden.v1.PlantService.GetPlant:output_type -> garden.v1.GetPlantResponse
	12, // [12:17] is the sub-list for method output_type
	7,  // [7:12] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_garden_v1_plant_proto_init() }
func file_garden_v1_plant_proto_init() {
	if File_garden_v1_plant_proto != nil {
		return
	}
	file_garden_v1_schema_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_garden_v1_plant_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePlantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_garden_v1_plant_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePlantResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_garden_v1_plant_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePlantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_garden_v1_plant_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePlantResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_garden_v1_plant_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePlantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_garden_v1_plant_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePlantResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_garden_v1_plant_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlantsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_garden_v1_plant_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlantsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_garden_v1_plant_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_garden_v1_plant_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlantResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_garden_v1_plant_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_garden_v1_plant_proto_goTypes,
		DependencyIndexes: file_garden_v1_plant_proto_depIdxs,
		MessageInfos:      file_garden_v1_plant_proto_msgTypes,
	}.Build()
	File_garden_v1_plant_proto = out.File
	file_garden_v1_plant_proto_rawDesc = nil
	file_garden_v1_plant_proto_goTypes = nil
	file_garden_v1_plant_proto_depIdxs = nil
}
