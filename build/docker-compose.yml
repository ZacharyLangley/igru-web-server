version: "3"

services:

  init-db:
    image: cockroachdb/cockroach:v22.1.11
    command:
      - "sql"
      - "--insecure"
      - "--host"
      - "db"
      - "-e"
      - "CREATE DATABASE IF NOT EXISTS authentication;"
      - "-e"
      - "CREATE DATABASE IF NOT EXISTS garden;"
    depends_on:
      - db
    deploy:
      restart_policy:
          condition: on-failure

  authentication:
    build:
      context: ./..
      dockerfile: build/Dockerfile
    command: auth serve --config default.yml
    volumes:
      - ./authentication/default.yml://default.yml:ro
      - ./authentication/migrations://migrations:ro
    restart: always
    ports:
      - "8081:80"
    environment:
      DATABASE.HOST: db
      LOGGER.LEVEL: debug
      METRICS.JAEGERADDRESS: jaeger:14268
    depends_on:
      - init-db

  db:
    image: cockroachdb/cockroach:v22.1.11
    ports:
      - "8888:8080" # Dashboard
      - "26257:26257"
    command:
      - "start-single-node"
      - "--insecure"
    volumes:
      - ./db-data/cockroach/://cockroach/cockroach-data

  garden:
    build:
      context: ./..
      dockerfile: build/Dockerfile
    command: garden serve --config default.yml
    restart: always
    ports:
      - "8082:80"
    environment:
      DATABASE.HOST: db
      LOGGER.LEVEL: debug
      METRICS.JAEGERADDRESS: jaeger:14268
    volumes:
      - ./gardens/default.yml://default.yml:ro
      - ./gardens/migrations://migrations:ro
    depends_on:
      - init-db

  ingress:
    build:
      context: ./..
      dockerfile: build/Dockerfile
    command: ingress serve --config default.yml
    volumes:
      - ./ingress/default.yml://default.yml:ro
    ports:
      - "80:80"

  jaeger:
    image: jaegertracing/all-in-one:1.6
    ports:
      - 14268:14268 # Services
      - 16686:16686 # Frontend
